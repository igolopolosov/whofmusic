<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ResourceFlowDirection" xml:space="preserve">
    <value>LeftToRight</value>
  </data>
  <data name="ResourceLanguage" xml:space="preserve">
    <value>en-GB</value>
  </data>
  <data name="CreateProject" xml:space="preserve">
    <value>CREATE PROJECT</value>
  </data>
  <data name="ProjectString" xml:space="preserve">
    <value>composition</value>
  </data>
  <data name="TrackString" xml:space="preserve">
    <value>track</value>
  </data>
  <data name="OK" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="AppBarHelp" xml:space="preserve">
    <value>help</value>
  </data>
  <data name="DeleteContextMenu" xml:space="preserve">
    <value>delete</value>
  </data>
  <data name="RenameContextMenu" xml:space="preserve">
    <value>rename</value>
  </data>
  <data name="AppBarPlay" xml:space="preserve">
    <value>play</value>
  </data>
  <data name="AppBarStop" xml:space="preserve">
    <value>stop</value>
  </data>
  <data name="ErrorEmptyName" xml:space="preserve">
    <value>Please, give a name.</value>
  </data>
  <data name="AppBarPause" xml:space="preserve">
    <value>pause</value>
  </data>
  <data name="AppBarResume" xml:space="preserve">
    <value>resume</value>
  </data>
  <data name="TactString" xml:space="preserve">
    <value>TACT</value>
  </data>
  <data name="AppBarAddTrack" xml:space="preserve">
    <value>add track</value>
  </data>
  <data name="RenameProject" xml:space="preserve">
    <value>RENAME PROJECT</value>
  </data>
  <data name="AppBarCreateProject" xml:space="preserve">
    <value>create project</value>
  </data>
  <data name="RenameTrack" xml:space="preserve">
    <value>RENAME TRACK</value>
  </data>
  <data name="MessageDeleteProject" xml:space="preserve">
    <value>Are you sure you want to delete the project?</value>
  </data>
  <data name="MessageDeleteTrack" xml:space="preserve">
    <value>Are you sure you want to delete the track?</value>
  </data>
  <data name="AppBarAddSample" xml:space="preserve">
    <value>add sample</value>
  </data>
  <data name="TextBlockTextTempo" xml:space="preserve">
    <value>tempo</value>
  </data>
  <data name="MessageChangeTempo" xml:space="preserve">
    <value>Enter value from 30 to 240.</value>
  </data>
  <data name="TitleChangeTempo" xml:space="preserve">
    <value>CHANGE TEMPO</value>
  </data>
  <data name="MessageIncorrectValue" xml:space="preserve">
    <value>Unsuitable!</value>
  </data>
  <data name="MessageDeleteSample" xml:space="preserve">
    <value>Are you sure you want to delete the sample?</value>
  </data>
  <data name="RenameSample" xml:space="preserve">
    <value>RENAME SAMPLE</value>
  </data>
  <data name="MessageChoseSampleSize" xml:space="preserve">
    <value>Select the number of tacts in the added sample.</value>
  </data>
  <data name="DuplicateContextMenu" xml:space="preserve">
    <value>duplicate</value>
  </data>
  <data name="MessageChoseNoteSize" xml:space="preserve">
    <value>Select the duration of the note.</value>
  </data>
  <data name="AppBarNoteDuration" xml:space="preserve">
    <value>duration of note</value>
  </data>
  <data name="SelectInstrument" xml:space="preserve">
    <value>SELECT INSTRUMENT</value>
  </data>
  <data name="MainString" xml:space="preserve">
    <value>main</value>
  </data>
  <data name="SampleString" xml:space="preserve">
    <value>sample</value>
  </data>
  <data name="HelpMain2" xml:space="preserve">
    <value>Creating a new musical composition.</value>
  </data>
  <data name="HelpMain3" xml:space="preserve">
    <value>Transition to editing the composition - tap on the composition from the list.</value>
  </data>
  <data name="HelpMain4" xml:space="preserve">
    <value>Renaming or deleting the composition - hold on the composition of the list.</value>
  </data>
  <data name="HelpProject1" xml:space="preserve">
    <value>Adding a new track to the musical composition.</value>
  </data>
  <data name="HelpProject10" xml:space="preserve">
    <value>Rename or delete the track - hold on the track from the list.</value>
  </data>
  <data name="HelpProject2" xml:space="preserve">
    <value>Playing from the beginning of a musical composition with the account settings play tracks.</value>
  </data>
  <data name="HelpProject3" xml:space="preserve">
    <value>Pause playback of a composition at the moment.</value>
  </data>
  <data name="HelpProject4" xml:space="preserve">
    <value>Resume playback after stopping.</value>
  </data>
  <data name="HelpProject5" xml:space="preserve">
    <value>Stop playing composition.</value>
  </data>
  <data name="HelpProject6" xml:space="preserve">
    <value>Changing the tempo - tap on the block called "temp."</value>
  </data>
  <data name="HelpProject7" xml:space="preserve">
    <value>Instrument selection - tap the button following the title track, which displays the name of the currently selected instrument.</value>
  </data>
  <data name="HelpProject8" xml:space="preserve">
    <value>Change the play mode - the right of the screen to select the desired track. s - solo. m - mute.</value>
  </data>
  <data name="HelpProject9" xml:space="preserve">
    <value>Transition to editing the track - tap on the track from the list.</value>
  </data>
  <data name="HelpTrack1" xml:space="preserve">
    <value>Adding a new sample at the end of the track.</value>
  </data>
  <data name="HelpTrack2" xml:space="preserve">
    <value>Switching between tracks.</value>
  </data>
  <data name="HelpTrack3" xml:space="preserve">
    <value>Moving sample - hold on the arrow beside the desired block.</value>
  </data>
  <data name="HelpTrack4" xml:space="preserve">
    <value>Playing track from a particular sample - tap on the triangle on the right sample.</value>
  </data>
  <data name="HelpTrack5" xml:space="preserve">
    <value>Duplicating, renaming, and deleting sample- hold on the sample from the list.</value>
  </data>
  <data name="HelpTrack6" xml:space="preserve">
    <value>Transition to editing the sample - tap on the sample from the list.</value>
  </data>
</root>